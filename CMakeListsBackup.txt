cmake_minimum_required(VERSION 3.8)

project("GLFW")

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED TRUE)

set (
	GLFW_LIB_FILES
	"src/context.c"
	"src/init.c"
	"src/input.c"
	"src/monitor.c"
	"src/window.c"
)

set(
	GLFW_COMPILE_OPTIONS
)

set (
	GLFW_LINK_LIBRARIES
)

set(
	GLFW_INCLUDE_DIRS
)

if (WIN32)
	set(
		GLFW_LIB_FILES
		${GLFW_LIB_FILES}
		"src/win32_init.c"
		"src/win32_joystick.c"
		"src/win32_monitor.c"
		"src/win32_time.c"
		"src/win32_thread.c"
		"src/win32_window.c"
		"src/wgl_context.c"
		"src/egl_context.c"
		"src/osmesa_context.c"
		"src/vulkan.c"
	)
	set(
		GLFW_COMPILE_OPTIONS
		${GLFW_COMPILE_OPTIONS}
		"-D_GLFW_WIN32"
		"-D_CRT_SECURE_NO_WARNINGS"
	)
elseif(UNIX AND NOT APPLE)
	set(
		GLFW_LIB_FILES
		${GLFW_LIB_FILES}
		"src/x11_init.c"
		"src/x11_monitor.c"
		"src/x11_window.c"
		"src/xkb_unicode.c"
		"src/posix_time.c"
		"src/posix_thread.c"
		"src/glx_context.c"
		"src/egl_context.c"
		"src/osmesa_context.c"
		"src/linux_joystick.c"
	)
	set(
		GLFW_COMPILE_OPTIONS
		${GLFW_COMPILE_OPTIONS}
		"-D_GLFW_X11"
	)

	set(
		GLFW_LINK_LIBRARIES
		${GLFW_LINK_LIBRARIES}
		m GL X11 pthread dl
	)
elseif(APPLE)
	set(
		GLFW_LIB_FILES
		${GLFW_LIB_FILES}
		"src/osmesa_context.c"
	)
	find_package(X11 REQUIRED)

	set(
		GLFW_LINK_LIBRARIES
		${GLFW_LINK_LIBRARIES}
		${X11_LIBRARIES}
	)

	set(
		GLFW_INCLUDE_DIRS
		${GLFW_INCLUDE_DIRS}
		${X11_INCLUDE_DIR}
	)

	set(
		GLFW_COMPILE_OPTIONS
		${GLFW_COMPILE_OPTIONS}
		"-D_GLFW_COCOA"
		"-D_GLFW_USE_LINUX_JOYSTICKS"
	)
endif()

add_library(
	GLFW STATIC 
	${GLFW_LIB_FILES}
)

target_link_libraries(
	GLFW PUBLIC 
	${GLFW_LINK_LIBRARIES}
)

target_include_directories(
	GLFW PUBLIC
	${GLFW_INCLUDE_DIRS}
)

target_compile_options(
	GLFW PUBLIC 
	${GLFW_COMPILE_OPTIONS}
)